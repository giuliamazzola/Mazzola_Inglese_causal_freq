---
title: "Historical and typological perspectives on anticausativization"
author: "Giulia Mazzola"
date: "2024-01-25"
output:
  html_document: default
  pdf_document: default
subtitle: "Predicting Causalness degree in Diachrony"
---

```{r setup, include=T, warning=FALSE}
library(tidyverse)
library(kableExtra)
library(DT)
library(betareg)

knitr::opts_chunk$set(echo = F, warning = F, message = F)
data<-readxl::read_excel("romance_all_bruciare_clean_new_vnc_final.xlsx")

ita<-read.csv("it2.csv")
es<-read.csv("es2.csv")


summary_freq_all<-data %>%
  group_by (language, meaning, lemma) %>%
  summarise (n=n()) #%>%
  #mutate(rel.freq = paste0(round(100 * n/sum(n), 0), "%"))

summary_freq_all %>%  kbl(booktabs = TRUE, col.names = c("Language", "Meaning", "Lemma", "Count")) %>%
   collapse_rows(column = 1) %>% 
  kable_styling() 


colnames(ita)
colnames(es)

```


## Beta Italian

Subset the Italian data only to obtain unique combinations of lemma and period. 

```{r}

# Create causative prominence scale ####

ita$caus_prom<-ita$meaning %>% fct_recode(
             "1" = "split", # lower preference for caus 
             "2"= "close", 
             "3"="break",
             "4"= "open",
             "5"= "gather",
             "6"= "connect", 
             "7"="rock",
             "8"= "improve", 
             "9"= "rise",
             "10"= "fill", 
             "11"= "burn", 
             "12"= "turn", 
             "13"= "stop", 
             "14"= "melt",
             "15"= "sink", 
             "16"= "go out", 
             "17"= "wake up", 
             "18"= "dry",
             "19"= "freeze", 
             "20"= "boil"
)



# Step 1: Aggregate data to calculate the proportion of anticausative codings
ita_agg <- ita %>%
  group_by(lemma, period) %>%
  summarise(
    anticausative_count = sum(coding == "antic"),
    total_count = n(),
    proportion_anticausative = anticausative_count / total_count,
    causalness_degree = first(causalness_degree), # assumes same causalness_degree for a lemma-period
      ) %>%
  ungroup()

# Step 2: Create a lagged causalness_degree variable
ita_agg <- ita_agg %>%
  arrange(lemma, period) %>%
  group_by(lemma) %>%
  mutate(causalness_lagged = lag(causalness_degree)) %>%
  ungroup() %>%
  filter(!is.na(causalness_lagged)) # Remove rows without previous causalness_degree

# Step 3: Fit a Beta regression model
# Adjust proportions slightly to avoid exact 0 and 1
ita_agg <- ita_agg %>%
  mutate(proportion_adj = (proportion_anticausative * (total_count - 1) + 0.5) / total_count)

ita_agg<-ita_agg %>%
  #select(-caus_prom) %>% 
  filter(!is.na(proportion_adj), !is.na(causalness_lagged))

ita_agg <- ita_agg %>%
  mutate(across(5:8, ~ round(.x, 2))) 

ita_agg %>% kbl(booktabs = TRUE) %>%
   collapse_rows(column = 1) %>% 
  kable_styling()
```



## Spanish

Subset the Spanish data only to obtain unique combinations of lemma and period. 

```{r}

# Create causative prominence scale ####

es$caus_prom<-es$meaning %>% fct_recode(
             "1" = "split", # lower preference for caus 
             "2"= "close", 
             "3"="break",
             "4"= "open",
             "5"= "gather",
             "6"= "connect", 
             "7"="rock",
             "8"= "improve", 
             "9"= "rise",
             "10"= "fill", 
             "11"= "burn", 
             "12"= "turn", 
             "13"= "stop", 
             "14"= "melt",
             "15"= "sink", 
             "16"= "go out", 
             "17"= "wake up", 
             "18"= "dry",
             "19"= "freeze", 
             "20"= "boil" # higher preference for caus
)



# Step 1: Aggregate data to calculate the proportion of anticausative codings
es_agg <- es %>%
  group_by(lemma, period) %>%
  summarise(
    anticausative_count = sum(coding == "antic"),
    total_count = n(),
    proportion_anticausative = anticausative_count / total_count,
    causalness_degree = first(causalness_degree), # assumes same causalness_degree for a lemma-period
      ) %>%
  ungroup()

# Step 2: Create a lagged causalness_degree variable
es_agg <- es_agg %>%
  arrange(lemma, period) %>%
  group_by(lemma) %>%
  mutate(causalness_lagged = lag(causalness_degree)) %>%
  ungroup() %>%
  filter(!is.na(causalness_lagged)) # Remove rows without previous causalness_degree

# Step 3: Fit a Beta regression model
# Adjust proportions slightly to avoid exact 0 and 1
es_agg <- es_agg %>%
  mutate(proportion_adj = (proportion_anticausative * (total_count - 1) + 0.5) / total_count)

es_agg<-es_agg %>%
  filter(!is.na(proportion_adj), !is.na(causalness_lagged))

es_agg <- es_agg %>%
  mutate(across(5:8, ~ round(.x, 2))) 


es_agg %>% kbl(booktabs = TRUE) %>%
   collapse_rows(column = 1) %>% 
  kable_styling()



```




## Results

```{r}


# Add a column to each dataset to distinguish them
italian <- ita_agg %>%
  mutate(language = "Italian")

spanish <- es_agg %>%
  mutate(language = "Spanish")

# Combine the datasets using bind_rows()
join <- bind_rows(italian, spanish)

# View the combined dataset
head(join)


join$language<-as.factor(join$language)

join$lemma<-as.factor(join$lemma)
join$period_cat<-as.factor(join$period)
join$period<-as.factor(join$period)

join$period <- as.numeric(join$period) #If period is actually a sequential (ordered) variable, you can convert it to a numeric variable. This will allow you to model it as a continuous predictor.


```
 
 
```{r}
# Load required libraries
library(mgcv)
library(ggplot2)
library(dplyr)

model1 <- gam(
  proportion_anticausative ~ 
    s(causalness_degree, by = language, k = 10, bs = "cs", m = 1) + # Smooth interaction of causalness_lagged with language
    s(causalness_lagged, by = language, k = 10, bs = "cs", m = 1) + # Smooth interaction of causalness_lagged with language
    s(period, by = language, k = 5, bs = "cs"),   
  family = betar(link = "logit"),                 
  data = join
)

summary (model1)


model2 <- gam(
  proportion_anticausative ~ 
    s(causalness_degree, k = 10, bs = "cs", m = 1) + # Smooth interaction of causalness_lagged with language
    s(causalness_lagged, by = language, k = 10, bs = "cs", m = 1) + # Smooth interaction of causalness_lagged with language
    s(period, by = language, k = 5, bs = "cs"),   
  family = betar(link = "logit"),                 
  data = join
)

# Summarize the model
summary(model2) # this is the best

anova.gam(model2, model1, test = "Chisq") # not ok to remove by-language in caus deg


model3 <- gam(
  proportion_anticausative ~ 
    s(causalness_degree, by = language, k = 10, bs = "cs", m = 1) + # Smooth interaction of causalness_lagged with language
    s(causalness_lagged, k = 10, bs = "cs", m = 1) + # Smooth interaction of causalness_lagged with language
    s(period, by = language, k = 5, bs = "cs"),   
  family = betar(link = "logit"),                 
  data = join
)


# Summarize the model
summary(model3) 


anova.gam(model1, model3, test = "Chisq") # ok to remove by language in lagged


model4 <- gam(
  proportion_anticausative ~ 
    s(causalness_degree, by = language, k = 10, bs = "cs", m = 1) + # Smooth interaction of causalness_lagged with language
    s(causalness_lagged, k = 10, bs = "cs", m = 1) + # Smooth interaction of causalness_lagged with language
    s(period, k = 5, bs = "cs"),   
  family = betar(link = "logit"),                 
  data = join
)
# Summarize the model
summary(model4) #ok to remove by language in period


anova.gam(model4, model3, test = "Chisq")



model5 <- gam(
  proportion_anticausative ~ 
    s(causalness_degree, by = language, k = 10, bs = "cs", m = 1) + # Smooth interaction of causalness_lagged with language
    s(causalness_lagged, k = 10, bs = "cs", m = 1),
  family = betar(link = "logit"),                 
  data = join
)

# Summarize the model
summary(model5) #not ok to remove period


anova.gam(model4, model5, test = "Chisq") # model 2 is the best


model6 <- gam(
  proportion_anticausative ~ 
    s(causalness_degree, by = language, k = 10, bs = "cs", m = 1) + # Smooth interaction of causalness_lagged with language
    #s(causalness_lagged, k = 10, bs = "cs", m = 1) + # Smooth interaction of causalness_lagged with language
    s(period, k = 5, bs = "cs"),   
  family = betar(link = "logit"),                 
  data = join
)

# Summarize the model
summary(model6) #ok to remove by language in period


anova.gam(model6, model4, test = "Chisq") # model 2 is the best





results<-report::report_table(model6)
report::display(results)

```


## Beta regression with `mgcv::gam()`


```{r}

# Load required libraries
library(mgcv)
library(ggplot2)
library(dplyr)
library(viridis)

# Fit the model (assuming 'join' is your dataset and it's already loaded)
model <- gam(
  proportion_anticausative ~ 
    s(causalness_lagged, by = language, k = 10, bs = "cs", m = 1) +      
    s(period, by = language, k = 5, bs = "cs"), 
  family = betar(link = "logit"),
  data = join
)

summary(model)

# Create a new dataset for predictions
new_data <- join %>%
  mutate(fit = predict(model, newdata = join, type = "response"))

# Plot 1: Smooth regression for causalness_lagged with color-coded dots
ggplot(new_data, aes(x = causalness_lagged, y = proportion_anticausative, color = causalness_lagged)) +
  geom_point( alpha = 0.7) +  # Dots with transparency and shape for period
  geom_smooth(method = "loess", se = F, aes(group = language)) +  # Loess smooth line
  scale_color_viridis_c() +  # Color scale for causalness_lagged (continuous variable)
  facet_wrap(~ language) +  # Facet by language (Spanish vs. Italian)
  labs(
    title = "Effect of Causalness Degree on Anticausative Proportion",
    x = "Causalness Degree",
    y = "Proportion of Anticausative",
    color = "Causalness Degree",
    #shape = "Period"
  ) +
  theme_minimal() +
  theme(legend.position = "bottom")+
  ylim(0,1)

ggplot(new_data, aes(x = causalness_lagged, y = proportion_anticausative, color = causalness_lagged)) +
  geom_point( alpha = 0.7) +  # Dots with transparency and shape for period
  geom_smooth(method = "gam", se = F, aes(group = language), color= "#fc8961") +  # GAM smooth line
  scale_color_viridis(option="magma")+
    facet_wrap(~ language) +  # Facet by language (Spanish vs. Italian)
  labs(
    title = "",
    x = "Lagged Causalness Degree",
    y = "Proportion of Anticausative",
    color = "Lagged Causalness Degree",
    shape = "Period"
  ) +
  theme_minimal() +
  theme(legend.position = "bottom")


ggplot(new_data, aes(x = period_cat, y = proportion_anticausative, color = factor(period))) +
  #geom_point(alpha = 0.7) +  # Dots with transparency
  geom_smooth(method = "loess", se = F, aes(group = language), color= "#fc8961") +  # Loess smooth line
  scale_color_viridis_d() +  # Discrete color scale for period (categorical variable)
  facet_wrap(~ language) +  # Facet by language (Spanish vs. Italian)
  labs(
    title = "Effect of Time Period on Anticausative Proportion",
    x = "Time Period",
    y = "Proportion of Anticausative",
    color = "Period"
  ) +
  theme_minimal() +
  theme(legend.position = "bottom")+
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))

ggplot(new_data, aes(x = period_cat, y = proportion_anticausative, color = factor(period))) +
  #geom_point(alpha = 0.7) +  # Dots with transparency
  geom_smooth(method = "lm", se = F, aes(group = language), color= "#fc8961" ) +  
  facet_wrap(~ language) +  # Facet by language (Spanish vs. Italian)
  labs(
    title = "Effect of Time Period on Anticausative Proportion",
    x = "Time Period",
    y = "Proportion of Anticausative",
    color = "Period"
  ) +
  theme_minimal() +
  theme(legend.position = "bottom")+
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))






```
 
 
## Beta regression with `betareg` 
 
```{r} 






model_join <- betareg(proportion_adj ~ causalness_lagged  + language + language*causalness_lagged, data = join)
summary(model_join)

# Assuming 'model' is already fitted, get predicted probabilities (mean of the beta distribution)
predicted_probs <- predict(model_join, type = "response")  # `model` is your betareg model

# Add predicted probabilities to your data frame
join$predicted_probs <- predicted_probs

# Plot 1: Predicted probabilities vs. causalness_lagged
ggplot(join, aes(x = causalness_lagged, y = predicted_probs)) +
  geom_point(aes(color = causalness_lagged), alpha = 0.6) +   # scatter points
  geom_smooth(method = "loess", se = FALSE, color = "#98FF98") +  # mint green regression line
  scale_color_gradient(low = "#b3e6b3", high = "#006400") +  # Green gradient for legend
  labs(title = "Predicted Probabilities vs Causalness Lagged",
       x = "Causalness Lagged",
       y = "Predicted Probability") +
  theme_minimal()



# Plot 3: Predicted probabilities against both predictors
ggplot(join, aes(x = causalness_lagged, y = predicted_probs)) +
  geom_point(aes(color = causalness_lagged), alpha = 0.6) +  # scatter points
  geom_smooth(method = "loess", se = FALSE, color = "#98FF98") +  # mint green regression line
  scale_color_gradient(low = "#b3e6b3", high = "#006400") +  # Green gradient for legend
  facet_wrap(~ language) +   # Create separate plots for each caus_prom value
  labs(title = "Predicted Probabilities by Causalness Lagged and Causality Preference",
       x = "Causalness Lagged",
       y = "Predicted Probability") +
  theme_minimal()





```














